/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ChallengeListRelationFilter } from "../../challenge/base/ChallengeListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { CommentListRelationFilter } from "../../comment/base/CommentListRelationFilter";
import { DiscussionForumListRelationFilter } from "../../discussionForum/base/DiscussionForumListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { LikeListRelationFilter } from "../../like/base/LikeListRelationFilter";
import { LiveSessionListRelationFilter } from "../../liveSession/base/LiveSessionListRelationFilter";
import { PostListRelationFilter } from "../../post/base/PostListRelationFilter";
import { RecipeListRelationFilter } from "../../recipe/base/RecipeListRelationFilter";
import { ShareListRelationFilter } from "../../share/base/ShareListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => ChallengeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ChallengeListRelationFilter)
  @IsOptional()
  @Field(() => ChallengeListRelationFilter, {
    nullable: true,
  })
  challenges?: ChallengeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CommentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommentListRelationFilter)
  @IsOptional()
  @Field(() => CommentListRelationFilter, {
    nullable: true,
  })
  comments?: CommentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DiscussionForumListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DiscussionForumListRelationFilter)
  @IsOptional()
  @Field(() => DiscussionForumListRelationFilter, {
    nullable: true,
  })
  discussionForums?: DiscussionForumListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isActive?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LikeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LikeListRelationFilter)
  @IsOptional()
  @Field(() => LikeListRelationFilter, {
    nullable: true,
  })
  likes?: LikeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LiveSessionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LiveSessionListRelationFilter)
  @IsOptional()
  @Field(() => LiveSessionListRelationFilter, {
    nullable: true,
  })
  liveSessions?: LiveSessionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PostListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PostListRelationFilter)
  @IsOptional()
  @Field(() => PostListRelationFilter, {
    nullable: true,
  })
  posts?: PostListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RecipeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecipeListRelationFilter)
  @IsOptional()
  @Field(() => RecipeListRelationFilter, {
    nullable: true,
  })
  recipes?: RecipeListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ShareListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ShareListRelationFilter)
  @IsOptional()
  @Field(() => ShareListRelationFilter, {
    nullable: true,
  })
  shares?: ShareListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput as UserWhereInput };
