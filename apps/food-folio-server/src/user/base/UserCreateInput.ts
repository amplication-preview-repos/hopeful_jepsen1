/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ChallengeCreateNestedManyWithoutUsersInput } from "./ChallengeCreateNestedManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { CommentCreateNestedManyWithoutUsersInput } from "./CommentCreateNestedManyWithoutUsersInput";
import { DiscussionForumCreateNestedManyWithoutUsersInput } from "./DiscussionForumCreateNestedManyWithoutUsersInput";
import { LikeCreateNestedManyWithoutUsersInput } from "./LikeCreateNestedManyWithoutUsersInput";
import { LiveSessionCreateNestedManyWithoutUsersInput } from "./LiveSessionCreateNestedManyWithoutUsersInput";
import { PostCreateNestedManyWithoutUsersInput } from "./PostCreateNestedManyWithoutUsersInput";
import { RecipeCreateNestedManyWithoutUsersInput } from "./RecipeCreateNestedManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ShareCreateNestedManyWithoutUsersInput } from "./ShareCreateNestedManyWithoutUsersInput";

@InputType()
class UserCreateInput {
  @ApiProperty({
    required: false,
    type: () => ChallengeCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ChallengeCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ChallengeCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  challenges?: ChallengeCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  comments?: CommentCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DiscussionForumCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DiscussionForumCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DiscussionForumCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  discussionForums?: DiscussionForumCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => LikeCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => LikeCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => LikeCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  likes?: LikeCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => LiveSessionCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => LiveSessionCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => LiveSessionCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  liveSessions?: LiveSessionCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: false,
    type: () => PostCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PostCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PostCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  posts?: PostCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => RecipeCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RecipeCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RecipeCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  recipes?: RecipeCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ShareCreateNestedManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ShareCreateNestedManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ShareCreateNestedManyWithoutUsersInput, {
    nullable: true,
  })
  shares?: ShareCreateNestedManyWithoutUsersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;
}

export { UserCreateInput as UserCreateInput };
