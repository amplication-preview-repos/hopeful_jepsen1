/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ChallengeUpdateManyWithoutUsersInput } from "./ChallengeUpdateManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { CommentUpdateManyWithoutUsersInput } from "./CommentUpdateManyWithoutUsersInput";
import { DiscussionForumUpdateManyWithoutUsersInput } from "./DiscussionForumUpdateManyWithoutUsersInput";
import { LikeUpdateManyWithoutUsersInput } from "./LikeUpdateManyWithoutUsersInput";
import { LiveSessionUpdateManyWithoutUsersInput } from "./LiveSessionUpdateManyWithoutUsersInput";
import { PostUpdateManyWithoutUsersInput } from "./PostUpdateManyWithoutUsersInput";
import { RecipeUpdateManyWithoutUsersInput } from "./RecipeUpdateManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ShareUpdateManyWithoutUsersInput } from "./ShareUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ChallengeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ChallengeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ChallengeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  challenges?: ChallengeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DiscussionForumUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DiscussionForumUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DiscussionForumUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  discussionForums?: DiscussionForumUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => LikeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => LikeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => LikeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  likes?: LikeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => LiveSessionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => LiveSessionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => LiveSessionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  liveSessions?: LiveSessionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: () => PostUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => PostUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => PostUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  posts?: PostUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => RecipeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RecipeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RecipeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  recipes?: RecipeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ShareUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ShareUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ShareUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  shares?: ShareUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}

export { UserUpdateInput as UserUpdateInput };
